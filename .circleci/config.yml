# Use the latest 2.1 version of CircleCI pipeline process engine. 
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  windows: circleci/windows@2.4.0

commands:
  install-aws-cli:
        description: Download and AWSCLIV2. Supports windows/amd64.
        steps:
            - run:
                command: |
                    $WebClient = New-Object System.Net.WebClient
                    $WebClient.DownloadFile("https://awscli.amazonaws.com/AWSCLIV2.msi","C:\Users\circleci\project\AWSCLIV2.msi")
                name: Download AWSCLIV2
            - run:
                command: msiexec.exe /i AWSCLIV2.msi /quiet
                name: Install AWSCLIV2
                shell: powershell.exe
            - run:
                command: |
                    echo 'export PATH="/c/Program Files/Amazon/AWSCLIV2:$PATH"' >> $BASH_ENV
                name: Add AWSCLIV2 to PATH (bash.exe)
                shell: bash.exe
            - run:
                command: |
                    [Environment]::SetEnvironmentVariable("Path", $env:PATH + `
                    ";c:\Program Files\Amazon\AWSCLIV2", "Machine")
                name: Add AWSCLIV2 to PATH (powershell.exe)
                shell: powershell.exe

jobs:
  setup:
    description: Checkout code, initialize executor, and prepare solution
    executor:
      name: windows/default
    steps:
      - checkout
      - install-aws-cli
      - run:
          name: "Versioning"
          command: ./tools/versioning.ps1 C:\Users\circleci\project\src\RocketInsights.Common\RocketInsights.Common.csproj $env:CIRCLE_BUILD_NUM
      - restore_cache:
          keys:
            - dotnet-packages-v1-{{ checksum "./src/RocketInsights.sln" }}
      - run:
          name: "Install project dependencies"
          command: dotnet.exe restore ./src/RocketInsights.sln
      - save_cache:
          paths:
            - C:\Users\circleci\.nuget\packages
          key: dotnet-packages-v1-{{ checksum "./src/RocketInsights.sln" }}
  test:
    description: Setup and run unit tests
    executor:
      name: windows/default
    steps:
      - run:
          name: "Run Application Tests"
          command: dotnet.exe test ./src/RocketInsights.sln -v n --logger:"junit;LogFilePath=../../TestResults/result.xml" --results-directory:TestResults --collect:"XPlat Code Coverage"
      - store_test_results:
          path: C:\Users\circleci\project\TestResults
      - store_artifacts:
          path: C:\Users\circleci\project\TestResults
  build:
    description: Build, pack, and publish packages
    executor:
      name: windows/default
    steps:
      - run:
          name: "Packing"
          command: dotnet.exe pack ./src/RocketInsights.sln --output C:\Users\circleci\project\Packages --configuration Release
      - run:
          name: "Publishing"
          command: |
              Write-Host $env:AWS_ACCESS_KEY_ID
              Write-Host $env:AWS_SECRET_ACCESS_KEY

workflows:
  default:
    jobs:
      - setup:
          context: team-dotnet
      - test:
          context: team-dotnet
          requires:
            - setup
      - build:
          context: team-dotnet
          requires:
            - setup
            - test